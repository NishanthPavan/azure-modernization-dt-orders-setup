#!/bin/bash

CREDS_FILE=/tmp/workshop-credentials.json

if [ -f "$CREDS_FILE" ]
then
    AZURE_RESOURCE_GROUP=$(cat $CREDS_FILE | jq -r '.AZURE_RESOURCE_GROUP')
    AZURE_SUBSCRIPTION=$(cat $CREDS_FILE | jq -r '.AZURE_SUBSCRIPTION')
    DT_BASEURL=$(cat $CREDS_FILE | jq -r '.DT_BASEURL')
    DT_API_TOKEN=$(cat $CREDS_FILE | jq -r '.DT_API_TOKEN')
else 
  echo "ABORT: CREDS_FILE: $CREDS_FILE not found"
  exit 1
fi

getMonolithPublicIP() {
  HOSTNAME_MONOLITH="dt-orders-monolith"
  echo "Retrieving $HOSTNAME_MONOLITH Public IP"
  PUBLIC_IP_MONOLITH=$(az vm list \
    --resource-group "$AZURE_RESOURCE_GROUP" \
    --subscription "$AZURE_SUBSCRIPTION" \
    --query "[?name=='$HOSTNAME_MONOLITH'].publicIps" -d -o tsv)
}

getServicesPublicIP() {
  HOSTNAME_SERVICES="dt-orders-services"
  echo "Retrieving $HOSTNAME_SERVICES Public IP"
  PUBLIC_IP_DOCKER=$(az vm list \
    --resource-group "$AZURE_RESOURCE_GROUP" \
    --subscription "$AZURE_SUBSCRIPTION" \
    --query "[?name=='$HOSTNAME_SERVICES'].publicIps" -d -o tsv)
}

showAppUrls() {

  getMonolithPublicIP
  getServicesPublicIP
  
  echo ""
  echo "-----------------------------------------------------------------------------------"
  echo "Workshop Application URLs:"
  echo "-----------------------------------------------------------------------------------"
  echo ""
  echo "MONOLITH VERSION"
  echo "http://$PUBLIC_IP_MONOLITH"
  echo ""
  echo "SERVICES VERSION"
  echo "http://$PUBLIC_IP_SERVICES"
  echo ""
  echo ""
}